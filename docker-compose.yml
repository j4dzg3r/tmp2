services:
  backend:
    build:
      context: .
      dockerfile: ./django_project/Dockerfile
    ports:
      - "8080:8080"

    depends_on:
      db:
        condition: service_healthy
      pgbouncer:
        condition: service_healthy
      minio:
        condition: service_healthy
      redis:
        condition: service_started

  db:
    image: postgres:15
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  pgbouncer:
    image: edoburu/pgbouncer
    container_name: pgbouncer
    restart: always
    depends_on:
      db:
        condition: service_healthy
    environment:
      DB_HOST: ${POSTGRES_HOST}
    ports:
      - ${PGBOUNCER_PORT}:${PGBOUNCER_PORT}
    command: >
      sh -c "
        echo \"
        [databases]
        * = host=${POSTGRES_HOST} port=${POSTGRES_PORT}

        [pgbouncer]
        listen_port = ${PGBOUNCER_PORT}
        listen_addr = *
        auth_type = md5
        auth_file = /etc/pgbouncer/userlist.txt
        logfile = /var/log/pgbouncer/pgbouncer.log
        pidfile = /var/run/pgbouncer/pgbouncer.pid
        pool_mode = session
        max_client_conn = 2000
        default_pool_size = 200
      
        # Connection pooling
        pool_mode = session
        max_client_conn = 2000
        default_pool_size = 200
        reserve_pool_size = 50
        reserve_pool_timeout = 5

        # Timeouts
        server_idle_timeout = 30
        server_lifetime = 3600
        server_connect_timeout = 15
        server_login_retry = 2

        # Logging
        syslog = 0
        stats_period = 60
        verbose = 0
        
        \" > /etc/pgbouncer/pgbouncer.ini;

        echo \"\\\"${POSTGRES_USER}\\\" \\\"${POSTGRES_PASSWORD}\\\"\" > /etc/pgbouncer/userlist.txt;
        exec /usr/bin/pgbouncer /etc/pgbouncer/pgbouncer.ini
      "
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -h localhost -p ${PGBOUNCER_PORT}" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  redis:
    image: redis:alpine
    restart: unless-stopped
    ports:
      - ${REDIS_PORT}:${REDIS_PORT}
    volumes:
      - redis:/data

  minio:
    image: minio/minio:latest
    restart: always
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:${MINIO_PORT}/minio/health/live" ]
      interval: 30s
      timeout: 20s
      retries: 3
    ports:
      - ${MINIO_PORT}:${MINIO_PORT}
      - ${MINIO_WEB_PORT}:${MINIO_WEB_PORT}
    volumes:
      - minio_data:/data
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    command: server /data --console-address ":${MINIO_WEB_PORT}"

volumes:
  postgres_data:
  redis:
  minio_data: